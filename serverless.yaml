service: serverless-go-api
frameworkVersion: '3'

plugins:
  - serverless-offline
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    USERS_TABLE: '${self:custom.stage}-users'

custom:
  serverless-offline:
    noPrependStageInUrl: true
    httpPort: 3000
  prune:
    automatic: true
    number: 1
  stage: ${opt:stage, self:provider.stage}
  stages:
    - dev
    - production
  users-table: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.stage}-users"
functions:
  - ${file(cmd/create-user/spec.yml)}
resources:
  - ${file(resources/dynamo/users.yml)}
#   - ${file(resources/functions-spec-users-resources.yml)}
#   - ${file(resources/functions-spec-leaders-resources.yml)}
#   - ${file(resources/resources-spec-api-authorizer.yml)}
#   - ${file(resources/resources-spec-apurata.yml)}
#   - ${file(resources/resources-spec-cash.yml)}
#   - ${file(resources/resources-spec-terms.yml)}
